{"version":3,"sources":["DragSelect.js"],"names":["cc","Class","extends","Component","start","node","on","Node","EventType","TOUCH_START","onTouchStart","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchEnd","cardsArr","getChildren","card","CARD_DISTANCE","width","anchorX","getComponent","Layout","spacingX","log","event","pos","getLocation","beginPos","_beginPos","convertToNodeSpaceAR","_checkSelectCard","movePos","_checkSelectCardReverse","_onSelectCardEnd","ctrl","touched","selected","endPos","isBegin","len","length","i","rectContainsPoint","getBoundingBox","w","Math","max","abs","x","h","y","min","touchRect","rect","rectIntersectsRect","p1"],"mappings":"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","file":"DragSelect.js","sourceRoot":"../../../../assets/Script","sourcesContent":["/**\n * Created by skyxu on 2018/11/1.\n * \n * 滑动选择卡牌组件\n * 把此组件拖放到卡牌根节点即可，卡牌根节点添加cc.Layout组件来自动布局\n * \n */\n\n\ncc.Class({\n    extends: cc.Component,\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\n\n        this.cardsArr = this.node.getChildren();\n        let card = this.cardsArr[0];\n        // 指左侧卡牌锚点到右侧相邻卡牌边缘的距离\n        this.CARD_DISTANCE = card.width*card.anchorX + this.node.getComponent(cc.Layout).spacingX;\n        cc.log(\"CARD_DISTANCE: \" + this.CARD_DISTANCE);\n    },\n\n    onTouchStart(event){\n        let pos = event.getLocation();\n        let beginPos = this._beginPos = this.node.convertToNodeSpaceAR(pos);\n        this._checkSelectCard(beginPos, beginPos, true);\n    },\n\n    onTouchMove(event){\n        let pos = event.getLocation();\n        let movePos = this.node.convertToNodeSpaceAR(pos)\n        // 这里确定是(movePos, movePos) 每次移动只选择右侧一张\n        this._checkSelectCard(movePos, movePos);\n        // 这里要传入起点和结束点，获取总的框取范围\n        this._checkSelectCardReverse(this._beginPos, movePos);\n    },\n\n    onTouchEnd(event){\n        this._onSelectCardEnd();\n    },\n\n    _onSelectCardEnd(){\n        for (let card of this.cardsArr){\n            let ctrl = card.getComponent(\"CardCtrl\");\n            if (ctrl.touched){\n                ctrl.selected = !ctrl.selected;\n            }\n            ctrl.touched = false;\n        }\n    },\n\n    _checkSelectCard(beginPos, endPos, isBegin){\n        let len = this.cardsArr.length;\n        if (isBegin){\n            for (let i=len-1; i>=0; i--){\n                let card = this.cardsArr[i];\n                if (cc.rectContainsPoint(card.getBoundingBox(), beginPos)){\n                    card.getComponent('CardCtrl').touched = true;\n                    return;\n                }\n            }\n        } else{\n            let w = Math.max(1, Math.abs(beginPos.x - endPos.x));\n            let h = Math.max(1, Math.abs(beginPos.y - endPos.y));\n            let x = Math.min(beginPos.x, endPos.x);\n            let y = Math.min(beginPos.y, endPos.y);\n            let touchRect = cc.rect(x, y, w, h);\n\n            for (let i=len-1; i>=0; i--){\n                let card = this.cardsArr[i];\n                if (cc.rectIntersectsRect(card.getBoundingBox(), touchRect)){\n                    card.getComponent('CardCtrl').touched = true;\n                    return;\n                }\n            }\n        }\n    },\n\n    _checkSelectCardReverse(beginPos, endPos){\n        let p1 = beginPos.x < endPos.x ? beginPos : endPos;\n        let w = Math.abs(beginPos.x - endPos.x);\n        let h = Math.abs(beginPos.y - endPos.y);\n        let rect = cc.rect(p1.x, p1.y, w, h);\n\n        let len = this.cardsArr.length;\n        for (let i=len-1; i>=0; i--){\n            let card = this.cardsArr[i];\n            if (!cc.rectIntersectsRect(card.getBoundingBox(), rect)){\n                card.getComponent('CardCtrl').touched = false;\n            }\n        }\n\n        // 从右向左框取然后又移动回右侧则取消左侧已经选择的卡牌\n        for (let i=0; i<len; i++){\n            let card = this.cardsArr[i];\n            if (p1.x - card.x >= this.CARD_DISTANCE){\n                card.getComponent('CardCtrl').touched = false;\n            }\n        }\n    }\n\n    // update (dt) {},\n});\n"]}